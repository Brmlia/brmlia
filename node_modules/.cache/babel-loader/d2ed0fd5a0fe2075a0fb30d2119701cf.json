{"ast":null,"code":"import _slicedToArray from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/ramiroochoa/Desktop/brmlia/src/fileuploader/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { fApi, fStore } from '../utils/index.js';\nvar thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\nvar thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: 'border-box'\n};\nvar thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\nvar img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction addFile(file, img) {\n  // method 1\n  fApi.setState(function (prevState) {\n    return {\n      file: [].concat(_toConsumableArray(prevState.file), [{\n        name: file.name,\n        image: file.preview,\n        style: img\n      }]),\n      size: prevState.size + 1\n    };\n  });\n}\n\nfunction isValidFile(name) {\n  // check if file is already uploaded\n  var validFile = false;\n  fApi.setState(function (prevState) {\n    var x = prevState.file.filter(function (file) {\n      return file.name === name;\n    });\n\n    if (x.length === 0) {\n      validFile = true;\n    }\n  });\n  return validFile;\n}\n\nfunction setSelected(idx) {\n  fApi.setState(function (prevState) {\n    return _objectSpread({}, prevState, {\n      selected: idx\n    });\n  });\n}\n\nexport function ImageUpload(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useDropzone = useDropzone({\n    accept: 'image/png, image/tiff',\n    onDrop: function onDrop(acceptedFiles) {\n      setFiles(acceptedFiles.map(function (file) {\n        return Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        });\n      }));\n    }\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var thumbs = files.map(function (file) {\n    return React.createElement(\"div\", {\n      style: thumb,\n      key: file.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: thumbInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: file.preview,\n      style: img,\n      type: file.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })));\n  });\n  var allThumbs = fApi.getState().file.map(function (file, idx) {\n    return React.createElement(\"div\", {\n      style: thumb,\n      key: file.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: thumbInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: file.image,\n      style: file.style,\n      onClick: function onClick() {\n        return setSelected(idx);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  });\n  var update = files.map(function (file) {\n    if (isValidFile(file.name)) {\n      addFile(file, img);\n      console.log(\"fileUploader::update() - updated state: \", fApi.getState());\n    }\n  });\n  useEffect(function () {\n    return function () {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    };\n  }, [files]);\n  return React.createElement(\"section\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: 'dropzone'\n  }), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" \", props.name, \" \"), update), React.createElement(\"aside\", {\n    style: thumbsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, allThumbs));\n}","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/fileuploader/index.js"],"names":["React","useEffect","useState","useDropzone","fApi","fStore","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","width","height","padding","boxSizing","thumbInner","minWidth","overflow","img","addFile","file","setState","prevState","name","image","preview","style","size","isValidFile","validFile","x","filter","length","setSelected","idx","selected","ImageUpload","props","files","setFiles","accept","onDrop","acceptedFiles","map","Object","assign","URL","createObjectURL","getRootProps","getInputProps","thumbs","type","allThumbs","getState","update","console","log","forEach","revokeObjectURL","className"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport { fApi, fStore } from '../utils/index.js'\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 50,\n  height: 50,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\nfunction addFile(file, img) {\n  // method 1\n  fApi.setState( prevState => ({\n    file: [...prevState.file, {\n      name: file.name,\n      image: file.preview,\n      style: img\n    }],\n    size: prevState.size + 1\n  }))\n}\n\nfunction isValidFile(name) {\n  // check if file is already uploaded\n  var validFile = false;\n\n  fApi.setState( prevState => {\n    const x = prevState.file.filter(file => file.name === name)\n    if (x.length === 0) {\n      validFile = true;\n    }\n  })\n  return validFile\n}\n\nfunction setSelected(idx) {\n  fApi.setState( prevState => ({\n    ...prevState,\n    selected: idx\n  }))\n}\n\nexport function ImageUpload(props) {\n  const [files, setFiles] = useState([]);\n  const {getRootProps, getInputProps} = useDropzone({\n    accept: 'image/png, image/tiff',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      ));\n    }\n  });\n\n  const thumbs = files.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n          type={file.type}\n        />\n      </div>\n    </div>\n  ));\n\n  const allThumbs = fApi.getState().file.map ((file, idx) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.image}\n          style={file.style}\n          onClick={() => setSelected(idx)}\n        />\n      </div>\n    </div>\n  ));\n\n  const update = files.map(file => {\n    if (isValidFile(file.name)) {\n      addFile(file, img)\n      console.log(\"fileUploader::update() - updated state: \" , fApi.getState())\n    }\n  });\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <p> {props.name} </p>\n       { update }\n      </div>\n      <aside style={thumbsContainer}>\n        {allThumbs}\n      </aside>\n    </section>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}