{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport { getCoordPercentage } from '../utils/offsetCoordinates';\nexport var TYPE = 'RECTANGLE';\nexport function intersects(_ref, geometry) {\n  var x = _ref.x,\n      y = _ref.y;\n  if (x < geometry.x) return false;\n  if (y < geometry.y) return false;\n  if (x > geometry.x + geometry.width) return false;\n  if (y > geometry.y + geometry.height) return false;\n  return true;\n}\nexport function area(geometry) {\n  return geometry.height * geometry.width;\n}\nexport var methods = {\n  onTouchStart: function onTouchStart(annotation, e) {\n    return pointerDown(annotation, e);\n  },\n  onTouchEnd: function onTouchEnd(annotation, e) {\n    return pointerUp(annotation, e);\n  },\n  onTouchMove: function onTouchMove(annotation, e) {\n    return pointerMove(annotation, e);\n  },\n  onMouseDown: function onMouseDown(annotation, e) {\n    return pointerDown(annotation, e);\n  },\n  onMouseUp: function onMouseUp(annotation, e) {\n    return pointerUp(annotation, e);\n  },\n  onMouseMove: function onMouseMove(annotation, e) {\n    return pointerMove(annotation, e);\n  }\n};\n\nfunction pointerDown(annotation, e) {\n  if (!annotation.selection) {\n    var _getCoordPercentage = getCoordPercentage(e),\n        anchorX = _getCoordPercentage.x,\n        anchorY = _getCoordPercentage.y;\n\n    return _extends({}, annotation, {\n      selection: _extends({}, annotation.selection, {\n        mode: 'SELECTING',\n        anchorX: anchorX,\n        anchorY: anchorY\n      })\n    });\n  } else {\n    return {};\n  }\n}\n\nfunction pointerUp(annotation, e) {\n  if (annotation.selection) {\n    var selection = annotation.selection,\n        geometry = annotation.geometry;\n\n    if (!geometry) {\n      return {};\n    }\n\n    switch (annotation.selection.mode) {\n      case 'SELECTING':\n        return _extends({}, annotation, {\n          selection: _extends({}, annotation.selection, {\n            showEditor: true,\n            mode: 'EDITING'\n          })\n        });\n\n      default:\n        break;\n    }\n  }\n\n  return annotation;\n}\n\nfunction pointerMove(annotation, e) {\n  if (annotation.selection && annotation.selection.mode === 'SELECTING') {\n    var _annotation$selection = annotation.selection,\n        anchorX = _annotation$selection.anchorX,\n        anchorY = _annotation$selection.anchorY;\n\n    var _getCoordPercentage2 = getCoordPercentage(e),\n        newX = _getCoordPercentage2.x,\n        newY = _getCoordPercentage2.y;\n\n    var width = newX - anchorX;\n    var height = newY - anchorY;\n    return _extends({}, annotation, {\n      geometry: _extends({}, annotation.geometry, {\n        type: TYPE,\n        x: width > 0 ? anchorX : newX,\n        y: height > 0 ? anchorY : newY,\n        width: Math.abs(width),\n        height: Math.abs(height)\n      })\n    });\n  }\n\n  return annotation;\n}\n\nexport default {\n  TYPE: TYPE,\n  intersects: intersects,\n  area: area,\n  methods: methods\n};","map":null,"metadata":{},"sourceType":"module"}