{"ast":null,"code":"import React from 'react';\nimport { fApi, uApi } from '../utils/index.js';\n\nfunction isValidChannel(channel) {\n  return uApi.getState() && uApi.getState().channels.length > 0 && channel >= 1 && uApi.getState().channels[channel - 1] && uApi.getState().channels[channel - 1].uniforms.contrast && uApi.getState().channels[channel - 1].uniforms.brightness;\n}\n\nfunction updateUniformBrightness(value, channel) {\n  uApi.setState(function (prevState) {\n    var channels = prevState.channels.map(function (ch, j) {\n      if (j === channel - 1) {\n        var newChannel = ch;\n        newChannel.uniforms.brightness.value = value;\n        return newChannel;\n      } else {\n        return ch;\n      }\n    });\n    return {\n      channels: channels\n    };\n  });\n}\n\nfunction updateUniformContrast(value, channel) {\n  uApi.setState(function (prevState) {\n    var channels = prevState.channels.map(function (ch, j) {\n      if (j === channel - 1) {\n        var newChannel = ch;\n        newChannel.uniforms.contrast.value = value;\n        return newChannel;\n      } else {\n        return ch;\n      }\n    });\n    return {\n      channels: channels\n    };\n  });\n}\n\nexport function updateUniformImage(texture, name, channel) {\n  uApi.setState(function (prevState) {\n    var channels = prevState.channels.map(function (ch, j) {\n      if (j === channel - 1) {\n        var newChannel = ch;\n        newChannel.name = name;\n        newChannel.uniforms.image.value = texture;\n        return newChannel;\n      } else {\n        return ch;\n      }\n    });\n    return {\n      channels: channels\n    };\n  });\n}\nexport function updateBrightness(value, channel) {\n  if (isValidChannel(channel)) {\n    if (value !== uApi.getState().channels[channel - 1].uniforms.brightness.value) {\n      updateUniformBrightness(value, channel);\n    }\n\n    return true;\n  } else {\n    console.log(\"null state\", uApi.getState(), \" channel: \", channel, \" value: \", value);\n  }\n\n  return false;\n}\nexport function updateContrast(value, channel) {\n  if (isValidChannel(channel)) {\n    if (value !== uApi.getState().channels[channel - 1].uniforms.contrast.value) {\n      updateUniformContrast(value, channel);\n    }\n\n    return true;\n  } else {\n    console.log(\"null state\", uApi.getState(), \" channel: \", channel, \" value: \", value);\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/imagecanvas/CanvasControl.js"],"names":["React","fApi","uApi","isValidChannel","channel","getState","channels","length","uniforms","contrast","brightness","updateUniformBrightness","value","setState","prevState","map","ch","j","newChannel","updateUniformContrast","updateUniformImage","texture","name","image","updateBrightness","console","log","updateContrast"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { fApi, uApi } from '../utils/index.js'\n\nfunction isValidChannel (channel) {\n  return (uApi.getState() && (uApi.getState().channels.length > 0) && (channel >= 1) && uApi.getState().channels[channel-1] && uApi.getState().channels[channel-1].uniforms.contrast && uApi.getState().channels[channel-1].uniforms.brightness )\n}\n\nfunction updateUniformBrightness(value, channel) {\n  uApi.setState( prevState => {\n    const channels = prevState.channels.map((ch, j) => {\n      if (j === channel-1) {\n        var newChannel = ch;\n        newChannel.uniforms.brightness.value = value\n        return newChannel;\n      }\n      else {\n        return ch\n      }\n    })\n    return {\n      channels\n    }\n  })\n}\n\nfunction updateUniformContrast(value, channel) {\n  uApi.setState( prevState => {\n    const channels = prevState.channels.map((ch, j) => {\n      if (j === channel-1) {\n        var newChannel = ch;\n        newChannel.uniforms.contrast.value = value\n        return newChannel;\n      }\n      else {\n        return ch\n      }\n    })\n    return {\n      channels\n    }\n  })\n}\n\nexport function updateUniformImage(texture, name, channel) {\n  uApi.setState( prevState => {\n    const channels = prevState.channels.map((ch, j) => {\n      if (j === channel-1) {\n        var newChannel = ch;\n\n        newChannel.name = name;\n        newChannel.uniforms.image.value = texture\n        return newChannel;\n      }\n      else {\n        return ch\n      }\n    })\n    return {\n      channels\n    }\n  })\n}\n\nexport function updateBrightness(value, channel) {\n  if (isValidChannel(channel)) {\n    if (value !== uApi.getState().channels[channel-1].uniforms.brightness.value){\n      updateUniformBrightness(value, channel)\n    }\n    return true;\n  }\n  else {\n    console.log(\"null state\", uApi.getState(), \" channel: \" , channel, \" value: \", value)\n  }\n  return false;\n}\n\nexport function updateContrast(value, channel) {\n  if (isValidChannel(channel)) {\n    if (value !== uApi.getState().channels[channel-1].uniforms.contrast.value){\n      updateUniformContrast(value, channel)\n    }\n    return true;\n  }\n  else {\n    console.log(\"null state\", uApi.getState(), \" channel: \" , channel, \" value: \", value)\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}