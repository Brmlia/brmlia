{"ast":null,"code":"import _objectSpread from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport create from 'zustand';\nexport var initState = {\n  channels: [{\n    selected: false\n  }, {\n    selected: false\n  }, {\n    selected: false\n  }],\n  lastSelected: 1\n};\n\nvar _create = create(function (set) {\n  return _objectSpread({}, initState);\n}),\n    _create2 = _slicedToArray(_create, 2),\n    useMainSettings = _create2[0],\n    settingsApi = _create2[1];\n\nexport { useMainSettings, settingsApi };\nexport function updateChannelSel(channel) {\n  settingsApi.setState(function (prevState) {\n    var channels = prevState.channels.map(function (ch, j) {\n      if (j === channel - 1) {\n        var newChannel = ch;\n        newChannel.selected = !prevState.channels[j].selected;\n        return newChannel;\n      } else {\n        return ch;\n      }\n    });\n    return {\n      channels: channels\n    };\n  });\n}\nexport function updateLastSel(channel) {\n  console.log(\"updateLastSel \", channel);\n  settingsApi.setState(function (prevState) {\n    return _objectSpread({}, prevState, {\n      lastSelected: channel\n    });\n  });\n}","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/mainSettings.js"],"names":["create","initState","channels","selected","lastSelected","set","useMainSettings","settingsApi","updateChannelSel","channel","setState","prevState","map","ch","j","newChannel","updateLastSel","console","log"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,SAAnB;AAEA,OAAO,IAAMC,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EACN,CACE;AACEC,IAAAA,QAAQ,EAAE;AADZ,GADF,EAIE;AACEA,IAAAA,QAAQ,EAAE;AADZ,GAJF,EAOE;AACEA,IAAAA,QAAQ,EAAE;AADZ,GAPF,CAFqB;AAavBC,EAAAA,YAAY,EAAE;AAbS,CAAlB;;cAgBuCJ,MAAM,CAAG,UAAAK,GAAG;AAAA,2BACrDJ,SADqD;AAAA,CAAN,C;;IAAtCK,e;IAAiBC,W;;;AAI/B,OAAO,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AACxCF,EAAAA,WAAW,CAACG,QAAZ,CAAsB,UAAAC,SAAS,EAAI;AACjC,QAAMT,QAAQ,GAAGS,SAAS,CAACT,QAAV,CAAmBU,GAAnB,CAAuB,UAACC,EAAD,EAAKC,CAAL,EAAW;AACjD,UAAIA,CAAC,KAAKL,OAAO,GAAC,CAAlB,EAAqB;AACnB,YAAIM,UAAU,GAAGF,EAAjB;AACAE,QAAAA,UAAU,CAACZ,QAAX,GAAsB,CAACQ,SAAS,CAACT,QAAV,CAAmBY,CAAnB,EAAsBX,QAA7C;AACA,eAAOY,UAAP;AACD,OAJD,MAKK;AACH,eAAOF,EAAP;AACD;AACF,KATgB,CAAjB;AAUA,WAAO;AACLX,MAAAA,QAAQ,EAARA;AADK,KAAP;AAGD,GAdD;AAeD;AAED,OAAO,SAASc,aAAT,CAAuBP,OAAvB,EAAgC;AACrCQ,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,OAA9B;AACAF,EAAAA,WAAW,CAACG,QAAZ,CAAsB,UAAAC,SAAS;AAAA,6BAC1BA,SAD0B;AAE7BP,MAAAA,YAAY,EAAEK;AAFe;AAAA,GAA/B;AAID","sourcesContent":["import create from 'zustand';\n\nexport const initState = {\n  channels:\n    [\n      {\n        selected: false\n      },\n      {\n        selected: false\n      },\n      {\n        selected: false\n      },\n    ],\n  lastSelected: 1\n}\n\nexport const [useMainSettings, settingsApi] = create ( set => ({\n  ...initState,\n}))\n\nexport function updateChannelSel(channel) {\n  settingsApi.setState( prevState => {\n    const channels = prevState.channels.map((ch, j) => {\n      if (j === channel-1) {\n        var newChannel = ch;\n        newChannel.selected = !prevState.channels[j].selected\n        return newChannel;\n      }\n      else {\n        return ch\n      }\n    })\n    return {\n      channels\n    }\n  })\n}\n\nexport function updateLastSel(channel) {\n  console.log(\"updateLastSel \", channel )\n  settingsApi.setState( prevState => ({\n    ...prevState,\n    lastSelected: channel\n  }))\n}"]},"metadata":{},"sourceType":"module"}