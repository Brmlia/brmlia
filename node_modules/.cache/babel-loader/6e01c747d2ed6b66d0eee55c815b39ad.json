{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _templateObject = _taggedTemplateLiteralLoose(['\\n  background: white;\\n  border-radius: 2px;\\n  box-shadow:\\n    0px 1px 5px 0px rgba(0, 0, 0, 0.2),\\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14),\\n    0px 3px 1px -2px rgba(0, 0, 0, 0.12);\\n  padding: 8px 16px;\\n  margin-top: 8px;\\n  margin-left: 8px;\\n'], ['\\n  background: white;\\n  border-radius: 2px;\\n  box-shadow:\\n    0px 1px 5px 0px rgba(0, 0, 0, 0.2),\\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14),\\n    0px 3px 1px -2px rgba(0, 0, 0, 0.12);\\n  padding: 8px 16px;\\n  margin-top: 8px;\\n  margin-left: 8px;\\n']);\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  strings.raw = raw;\n  return strings;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Container = styled.div(_templateObject);\n\nfunction Content(props) {\n  var geometry = props.annotation.geometry;\n  if (!geometry) return null;\n  return React.createElement(Container, {\n    style: _extends({\n      position: 'absolute',\n      left: geometry.x + '%',\n      top: geometry.y + geometry.height + '%'\n    }, props.style),\n    className: props.className,\n    geometry: geometry\n  }, props.annotation.data && props.annotation.data.text);\n}\n\nContent.defaultProps = {\n  style: {},\n  className: ''\n};\nexport default Content;","map":null,"metadata":{},"sourceType":"module"}