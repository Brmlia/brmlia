{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent as Component } from 'react';\n\nvar isMouseOverElement = function isMouseOverElement(_ref) {\n  var elem = _ref.elem,\n      e = _ref.e;\n  var pageY = e.pageY,\n      pageX = e.pageX;\n\n  var _elem$getBoundingClie = elem.getBoundingClientRect(),\n      left = _elem$getBoundingClie.left,\n      right = _elem$getBoundingClie.right,\n      bottom = _elem$getBoundingClie.bottom,\n      top = _elem$getBoundingClie.top;\n\n  return pageX > left && pageX < right && pageY > top && pageY < bottom;\n};\n\nvar isMouseHovering = function isMouseHovering() {\n  var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'isMouseHovering';\n  return function (DecoratedComponent) {\n    var IsMouseHovering = function (_Component) {\n      _inherits(IsMouseHovering, _Component);\n\n      function IsMouseHovering() {\n        _classCallCheck(this, IsMouseHovering);\n\n        var _this = _possibleConstructorReturn(this, _Component.call(this));\n\n        _this.onMouseMove = function (e) {\n          var elem = _this.el;\n\n          _this.setState({\n            isHoveringOver: isMouseOverElement({\n              elem: elem,\n              e: e\n            })\n          });\n        };\n\n        _this.state = {\n          isHoveringOver: false\n        };\n        return _this;\n      }\n\n      IsMouseHovering.prototype.componentDidMount = function componentDidMount() {\n        document.addEventListener('mousemove', this.onMouseMove);\n      };\n\n      IsMouseHovering.prototype.componentWillUnmount = function componentWillUnmount() {\n        document.removeEventListener('mousemove', this.onMouseMove);\n      };\n\n      IsMouseHovering.prototype.render = function render() {\n        var _this2 = this,\n            _hocProps;\n\n        var hocProps = (_hocProps = {}, _hocProps[key] = {\n          innerRef: function innerRef(el) {\n            return _this2.el = el;\n          },\n          isHoveringOver: this.state.isHoveringOver\n        }, _hocProps);\n        return React.createElement(DecoratedComponent, _extends({}, this.props, hocProps));\n      };\n\n      return IsMouseHovering;\n    }(Component);\n\n    IsMouseHovering.displayName = 'IsMouseHovering(' + DecoratedComponent.displayName + ')';\n    return IsMouseHovering;\n  };\n};\n\nexport default isMouseHovering;","map":null,"metadata":{},"sourceType":"module"}