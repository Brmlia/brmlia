{"ast":null,"code":"import _classCallCheck from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ramiroochoa/Desktop/brmlia/src/fileuploader/index.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\n\nvar ImageUpload = /*#__PURE__*/function (_React$Component) {\n  _inherits(ImageUpload, _React$Component);\n\n  function ImageUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUpload).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"render\",\n    value: function render() {\n      var maxSize = 10485760;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        onDrop: this.onDrop,\n        accept: \"image/png, image/tiff\",\n        minSize: 0,\n        maxSize: maxSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps,\n            isDragActive = _ref.isDragActive,\n            isDragReject = _ref.isDragReject,\n            rejectedFiles = _ref.rejectedFiles;\n        var isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        })), !isDragActive && \"Upload\", isDragActive && !isDragReject && \"Upload\", isDragReject && \"File type not accepted, sorry!\", isFileTooLarge && React.createElement(\"div\", {\n          className: \"text-danger mt-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"File is too large.\"));\n      }));\n    }\n  }]);\n\n  return ImageUpload;\n}(React.Component);\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/fileuploader/index.js"],"names":["React","Dropzone","ImageUpload","props","state","maxSize","onDrop","getRootProps","getInputProps","isDragActive","isDragReject","rejectedFiles","isFileTooLarge","length","size","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAKlB;;;;6BAEQ;AACL,UAAMC,OAAO,GAAG,QAAhB;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,MAAM,EAAE,KAAKC,MADf;AAEE,QAAA,MAAM,EAAC,uBAFT;AAGE,QAAA,OAAO,EAAE,CAHX;AAIE,QAAA,OAAO,EAAED,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,gBAA8E;AAAA,YAA5EE,YAA4E,QAA5EA,YAA4E;AAAA,YAA9DC,aAA8D,QAA9DA,aAA8D;AAAA,YAA/CC,YAA+C,QAA/CA,YAA+C;AAAA,YAAjCC,YAAiC,QAAjCA,YAAiC;AAAA,YAAnBC,aAAmB,QAAnBA,aAAmB;AAC7E,YAAMC,cAAc,GAAGD,aAAa,CAACE,MAAd,GAAuB,CAAvB,IAA4BF,aAAa,CAAC,CAAD,CAAb,CAAiBG,IAAjB,GAAwBT,OAA3E;AACA,eACE,6CAASE,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACE,+CAAYC,aAAa,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAGG,CAACC,YAAD,IAAiB,QAHpB,EAIGA,YAAY,IAAI,CAACC,YAAjB,IAAiC,QAJpC,EAKGA,YAAY,IAAI,gCALnB,EAMGE,cAAc,IACb;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPJ,CADF;AAaE,OArBN,CADF,CADF;AA4BD;;;;EAtCmBZ,KAAK,CAACe,S;;AAwC9B,eAAeb,WAAf","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\n\nclass ImageUpload extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n \n      }\n    }\n    \n    render() {\n        const maxSize = 10485760;\n        return (\n          <div>\n            <Dropzone\n              onDrop={this.onDrop}\n              accept=\"image/png, image/tiff\"\n              minSize={0}\n              maxSize={maxSize}\n            >\n              {({getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles}) => {\n                const isFileTooLarge = rejectedFiles.length > 0 && rejectedFiles[0].size > maxSize;\n                return (\n                  <div {...getRootProps()}>\n                    <input  {...getInputProps()}\n                    />\n                    {!isDragActive && \"Upload\"}\n                    {isDragActive && !isDragReject && \"Upload\"}\n                    {isDragReject && \"File type not accepted, sorry!\"}\n                    {isFileTooLarge && (\n                      <div className=\"text-danger mt-2\">\n                        File is too large.\n                      </div>\n                    )}\n                  </div>\n                )}\n              }\n            </Dropzone>\n          </div>\n        );\n      }\n    }\n  export default ImageUpload;"]},"metadata":{},"sourceType":"module"}