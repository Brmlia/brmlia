{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ramiroochoa/Desktop/brmlia/src/viewer/index.js\";\nimport React, { Component } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Slider from \"../ui/components/slider.js\";\nimport { withFileStore } from \"../utils/index.js\";\nimport \"../styles.css\";\n\nvar Viewer = /*#__PURE__*/function (_Component) {\n  _inherits(Viewer, _Component);\n\n  function Viewer(props) {\n    var _this;\n\n    _classCallCheck(this, Viewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Viewer).call(this, props));\n    _this.state = {\n      zpp: {\n        type: true,\n        limitToBounds: true,\n        panningEnabled: true,\n        transformEnabled: true,\n        pinchEnabled: false,\n        limitToWrapper: false,\n        disabled: false,\n        dbClickEnabled: true,\n        lockAxisX: false,\n        lockAxisY: false,\n        velocityEqualToMove: true,\n        enableWheel: true,\n        enableTouchPadPinch: false,\n        enableVelocity: true,\n        limitsOnWheel: false,\n        minScale: 0.5,\n        maxScale: 8,\n        step: 10,\n        updated: false,\n        scale: 1\n      },\n      slider: {\n        sync: false,\n        updated: false\n      },\n      zoomPct: 1,\n      prevPct: 0,\n      image: {\n        src: require('./../ui/assets/images/brom.jpeg'),\n        name: \"\",\n        style: {},\n        x: 0,\n        y: 0\n      },\n      selected: 0\n    };\n\n    _this.sliderValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.updateZoomValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(Viewer, [{\n    key: \"sliderValue\",\n    value: function sliderValue(value, isUpdated, isSynced) {\n      this.setState({\n        zoomPct: value / 100\n      });\n      this.setState({\n        slider: {\n          updated: isUpdated\n        }\n      });\n      this.setState({\n        slider: {\n          sync: isSynced\n        }\n      });\n    }\n  }, {\n    key: \"updateZoomValue\",\n    value: function updateZoomValue(value) {\n      if (this.state.zoomPct !== this.state.prevPct) {\n        this.state.prevPct = this.state.zoomPct;\n        this.state.zoomPct = value / 100;\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(state) {\n      if (this.state.image.name !== state.file[state.selected].name || this.state.selected !== state.selected) {\n        this.state.image.name = state.file[state.selected].name;\n        this.state.image.src = state.file[state.selected].image;\n        this.state.image.style = state.file[state.selected].style;\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"resetZoom\",\n    value: function resetZoom() {\n      this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          zoomPct: 1,\n          image: _objectSpread({}, prevState.image, {\n            x: 0,\n            y: 0\n          })\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var sub = this.props.api.subscribe(function (state) {\n        _this2.update(state);\n      });\n      var _this$state$zpp = this.state.zpp,\n          limitToBounds = _this$state$zpp.limitToBounds,\n          panningEnabled = _this$state$zpp.panningEnabled,\n          transformEnabled = _this$state$zpp.transformEnabled,\n          pinchEnabled = _this$state$zpp.pinchEnabled,\n          limitToWrapper = _this$state$zpp.limitToWrapper,\n          disabled = _this$state$zpp.disabled,\n          dbClickEnabled = _this$state$zpp.dbClickEnabled,\n          lockAxisX = _this$state$zpp.lockAxisX,\n          lockAxisY = _this$state$zpp.lockAxisY,\n          velocityEqualToMove = _this$state$zpp.velocityEqualToMove,\n          enableWheel = _this$state$zpp.enableWheel,\n          enableTouchPadPinch = _this$state$zpp.enableTouchPadPinch,\n          enableVelocity = _this$state$zpp.enableVelocity,\n          limitsOnWheel = _this$state$zpp.limitsOnWheel,\n          minScale = _this$state$zpp.minScale,\n          maxScale = _this$state$zpp.maxScale,\n          step = _this$state$zpp.step,\n          scale = _this$state$zpp.scale;\n      var sliderValue = this.sliderValue;\n\n      if (this.state.zoomPct == \"0.01\") {\n        this.state.zoomPct = scale;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"viewer-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(TransformWrapper, {\n        defaultScale: 1,\n        defaultPositionX: 0,\n        defaultPositionY: 0,\n        positionX: this.state.image.x,\n        positionY: this.state.image.y,\n        scale: this.state.zoomPct,\n        options: {\n          limitToBounds: limitToBounds,\n          transformEnabled: transformEnabled,\n          disabled: disabled,\n          limitToWrapper: limitToWrapper,\n          minScale: minScale,\n          maxScale: maxScale\n        },\n        pan: {\n          disabled: !panningEnabled,\n          lockAxisX: lockAxisX,\n          lockAxisY: lockAxisY,\n          velocityEqualToMove: velocityEqualToMove,\n          velocity: enableVelocity\n        },\n        pinch: {\n          disabled: !pinchEnabled\n        },\n        doubleClick: {\n          disabled: !dbClickEnabled\n        },\n        wheel: {\n          wheelEnabled: enableWheel,\n          touchPadEnabled: enableTouchPadPinch,\n          limitsOnWheel: limitsOnWheel,\n          step: step\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, function (_ref) {\n        var zoomIn = _ref.zoomIn,\n            zoomOut = _ref.zoomOut,\n            resetTransform = _ref.resetTransform,\n            setDefaultState = _ref.setDefaultState,\n            positionX = _ref.positionX,\n            positionY = _ref.positionY,\n            scale = _ref.scale,\n            previousScale = _ref.previousScale,\n            _ref$options = _ref.options,\n            limitToBounds = _ref$options.limitToBounds,\n            transformEnabled = _ref$options.transformEnabled,\n            disabled = _ref$options.disabled,\n            rest = _objectWithoutProperties(_ref, [\"zoomIn\", \"zoomOut\", \"resetTransform\", \"setDefaultState\", \"positionX\", \"positionY\", \"scale\", \"previousScale\", \"options\"]);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, _this2.updateZoomValue(scale), React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(TransformComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: _this2.state.image.src,\n          alt: \"viewer\",\n          width: _this2.props.imageWidth,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"x : \", Number(positionX).toFixed(0), \"px\"), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"y : \", Number(positionY).toFixed(0), \"px\"), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, \"Scale : \", Number(scale * 100).toFixed(0), \"%\")));\n      }), React.createElement(Slider, {\n        label: \"Zoom\",\n        width: \"40%\",\n        min: \"50\",\n        max: \"800\",\n        step: \"10\",\n        initial: this.state.zoomPct,\n        multiplier: \"1\",\n        sliderValue: sliderValue.bind(this),\n        newValue: this.state.zoomPct,\n        sync: this.state.slider.sync,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"resetZoomBtn\",\n        onClick: function onClick() {\n          _this2.resetZoom();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Reset Zoom\"));\n    }\n  }]);\n\n  return Viewer;\n}(Component);\n\nexport default withFileStore(Viewer);","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/viewer/index.js"],"names":["React","Component","TransformWrapper","TransformComponent","Slider","withFileStore","Viewer","props","state","zpp","type","limitToBounds","panningEnabled","transformEnabled","pinchEnabled","limitToWrapper","disabled","dbClickEnabled","lockAxisX","lockAxisY","velocityEqualToMove","enableWheel","enableTouchPadPinch","enableVelocity","limitsOnWheel","minScale","maxScale","step","updated","scale","slider","sync","zoomPct","prevPct","image","src","require","name","style","x","y","selected","sliderValue","bind","updateZoomValue","value","isUpdated","isSynced","setState","file","forceUpdate","prevState","sub","api","subscribe","update","velocity","wheelEnabled","touchPadEnabled","zoomIn","zoomOut","resetTransform","setDefaultState","positionX","positionY","previousScale","options","rest","imageWidth","Number","toFixed","resetZoom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Slider from \"../ui/components/slider.js\"\nimport {withFileStore} from \"../utils/index.js\";\nimport \"../styles.css\"\n\n\nclass Viewer extends Component {\n\n  constructor (props) {\n    super(props);\n    this.sliderValue.bind(this);\n    this.updateZoomValue.bind(this);\n  }\n\n  state = {\n    zpp: {\n      type: true,\n      limitToBounds: true,\n      panningEnabled: true,\n      transformEnabled: true,\n      pinchEnabled: false,\n      limitToWrapper: false,\n      disabled: false,\n      dbClickEnabled: true,\n      lockAxisX: false,\n      lockAxisY: false,\n      velocityEqualToMove: true,\n      enableWheel: true,\n      enableTouchPadPinch: false,\n      enableVelocity: true,\n      limitsOnWheel: false,\n      minScale: 0.5,\n      maxScale: 8,\n      step: 10,\n      updated: false,\n      scale: 1\n    },\n    slider: {\n      sync: false,\n      updated: false\n    },\n    zoomPct: 1,\n    prevPct: 0,\n    image: {\n      src: require('./../ui/assets/images/brom.jpeg'),\n      name: \"\",\n      style: {},\n      x: 0,\n      y: 0\n    },\n    selected: 0\n  };\n\n  sliderValue(value, isUpdated, isSynced) {\n    this.setState({zoomPct: value/100});\n    this.setState({slider: {updated: isUpdated}});\n    this.setState({slider: {sync: isSynced}});\n  }\n\n  updateZoomValue(value) {\n    if (this.state.zoomPct !== this.state.prevPct) {\n      this.state.prevPct = this.state.zoomPct;\n      this.state.zoomPct = value/100;\n    }\n  }\n\n  update(state) {\n    if ( (this.state.image.name !== state.file[state.selected].name)\n      || (this.state.selected !== state.selected)\n    ) {\n      this.state.image.name = state.file[state.selected].name\n      this.state.image.src = state.file[state.selected].image\n      this.state.image.style = state.file[state.selected].style\n      this.forceUpdate();\n    }\n  }\n\n  resetZoom() {\n    this.setState( prevState => (\n    {\n      ...prevState,\n      zoomPct: 1,\n      image: {\n        ...prevState.image,\n        x: 0,\n        y: 0\n      }\n    }));\n  }\n\n  render() {\n\n    const sub = this.props.api.subscribe(state =>  {\n      this.update(state);\n    })\n\n    const {\n      limitToBounds,\n      panningEnabled,\n      transformEnabled,\n      pinchEnabled,\n      limitToWrapper,\n      disabled,\n      dbClickEnabled,\n      lockAxisX,\n      lockAxisY,\n      velocityEqualToMove,\n      enableWheel,\n      enableTouchPadPinch,\n      enableVelocity,\n      limitsOnWheel,\n      minScale,\n      maxScale,\n      step,\n      scale\n    } = this.state.zpp;\n    var sliderValue = this.sliderValue;\n    if (this.state.zoomPct == \"0.01\") {\n      this.state.zoomPct = scale;\n    }\n\n    return (\n      <div className=\"viewer-wrapper\">\n        <TransformWrapper\n          defaultScale={1}\n          defaultPositionX={0}\n          defaultPositionY={0}\n          positionX={this.state.image.x}\n          positionY={this.state.image.y}\n          scale={this.state.zoomPct}\n          options={{\n            limitToBounds,\n            transformEnabled,\n            disabled,\n            limitToWrapper,\n            minScale,\n            maxScale\n          }}\n          pan={{\n            disabled: !panningEnabled,\n            lockAxisX,\n            lockAxisY,\n            velocityEqualToMove,\n            velocity: enableVelocity,\n          }}\n          pinch={{ disabled: !pinchEnabled }}\n          doubleClick={{ disabled: !dbClickEnabled }}\n          wheel={{\n            wheelEnabled: enableWheel,\n            touchPadEnabled: enableTouchPadPinch,\n            limitsOnWheel,\n            step: step\n          }}\n        >\n        {({\n          zoomIn,\n          zoomOut,\n          resetTransform,\n          setDefaultState,\n          positionX,\n          positionY,\n          scale,\n          previousScale,\n          options: { limitToBounds, transformEnabled, disabled },\n          ...rest\n        }) => (\n        <div>\n          {this.updateZoomValue(scale)}\n          <React.Fragment>\n            <TransformComponent>\n              <img src={this.state.image.src} alt=\"viewer\" width={this.props.imageWidth}/>\n            </TransformComponent>\n            <span className=\"badge badge-primary\">\n              x : {Number(positionX).toFixed(0)}px\n            </span>\n            <span className=\"badge badge-primary\">\n              y : {Number(positionY).toFixed(0)}px\n            </span>\n            <span className=\"badge badge-primary\">\n              Scale : {Number(scale*100).toFixed(0)}%\n            </span>\n          </React.Fragment>\n          </div>\n          )\n        }\n        </TransformWrapper>\n        <Slider label=\"Zoom\" width=\"40%\" min=\"50\" max=\"800\" step=\"10\" initial={this.state.zoomPct} multiplier=\"1\" sliderValue={sliderValue.bind(this)} newValue={this.state.zoomPct} sync={this.state.slider.sync} />\n        <button id=\"resetZoomBtn\" onClick={() => {this.resetZoom()}}>\n          Reset Zoom\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default withFileStore(Viewer);"]},"metadata":{},"sourceType":"module"}