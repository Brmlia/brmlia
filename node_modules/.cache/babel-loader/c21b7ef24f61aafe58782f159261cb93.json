{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ramiroochoa/Desktop/brmlia/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ramiroochoa/Desktop/brmlia/src/viewer/index.js\";\nimport React, { Component } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Slider from \"../utils/index.js\";\n\nvar Viewer = /*#__PURE__*/function (_Component) {\n  _inherits(Viewer, _Component);\n\n  function Viewer(props) {\n    var _this;\n\n    _classCallCheck(this, Viewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Viewer).call(this, props));\n    _this.state = {\n      zpp: {\n        type: true,\n        limitToBounds: true,\n        panningEnabled: true,\n        transformEnabled: true,\n        pinchEnabled: false,\n        limitToWrapper: false,\n        disabled: false,\n        dbClickEnabled: true,\n        lockAxisX: false,\n        lockAxisY: false,\n        velocityEqualToMove: true,\n        enableWheel: true,\n        enableTouchPadPinch: false,\n        enableVelocity: true,\n        limitsOnWheel: false,\n        minScale: 0.5,\n        maxScale: 8,\n        step: 10,\n        updated: false\n      },\n      slider: {\n        sync: false,\n        updated: false\n      },\n      zoomPct: 1,\n      prevPct: 0\n    };\n\n    _this.sliderValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.updateZoomValue.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    return _this;\n  }\n\n  _createClass(Viewer, [{\n    key: \"sliderValue\",\n    value: function sliderValue(value, isUpdated, isSynced) {\n      this.setState({\n        zoomPct: value / 100\n      });\n      this.setState({\n        slider: {\n          updated: isUpdated\n        }\n      });\n      this.setState({\n        slider: {\n          sync: isSynced\n        }\n      });\n    }\n  }, {\n    key: \"updateZoomValue\",\n    value: function updateZoomValue(value) {\n      this.state.zoomPct = value;\n\n      if (this.state.zoomPct !== this.state.prevPct) {\n        this.state.prevPct = this.state.zoomPct;\n        this.state.zoomPct = value / 100;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state$zpp = this.state.zpp,\n          limitToBounds = _this$state$zpp.limitToBounds,\n          panningEnabled = _this$state$zpp.panningEnabled,\n          transformEnabled = _this$state$zpp.transformEnabled,\n          pinchEnabled = _this$state$zpp.pinchEnabled,\n          limitToWrapper = _this$state$zpp.limitToWrapper,\n          disabled = _this$state$zpp.disabled,\n          dbClickEnabled = _this$state$zpp.dbClickEnabled,\n          lockAxisX = _this$state$zpp.lockAxisX,\n          lockAxisY = _this$state$zpp.lockAxisY,\n          velocityEqualToMove = _this$state$zpp.velocityEqualToMove,\n          enableWheel = _this$state$zpp.enableWheel,\n          enableTouchPadPinch = _this$state$zpp.enableTouchPadPinch,\n          enableVelocity = _this$state$zpp.enableVelocity,\n          limitsOnWheel = _this$state$zpp.limitsOnWheel,\n          minScale = _this$state$zpp.minScale,\n          maxScale = _this$state$zpp.maxScale,\n          step = _this$state$zpp.step;\n      var imageSrc = this.props.imageSrc;\n      var sliderValue = this.sliderValue;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(TransformWrapper, {\n        defaultScale: 1,\n        defaultPositionX: 0,\n        defaultPositionY: 0,\n        scale: this.state.zoomPct,\n        options: {\n          limitToBounds: limitToBounds,\n          transformEnabled: transformEnabled,\n          disabled: disabled,\n          limitToWrapper: limitToWrapper,\n          minScale: minScale,\n          maxScale: maxScale\n        },\n        pan: {\n          disabled: !panningEnabled,\n          lockAxisX: lockAxisX,\n          lockAxisY: lockAxisY,\n          velocityEqualToMove: velocityEqualToMove,\n          velocity: enableVelocity\n        },\n        pinch: {\n          disabled: !pinchEnabled\n        },\n        doubleClick: {\n          disabled: !dbClickEnabled\n        },\n        wheel: {\n          wheelEnabled: enableWheel,\n          touchPadEnabled: enableTouchPadPinch,\n          limitsOnWheel: limitsOnWheel,\n          step: step\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, function (_ref) {\n        var zoomIn = _ref.zoomIn,\n            zoomOut = _ref.zoomOut,\n            resetTransform = _ref.resetTransform,\n            setDefaultState = _ref.setDefaultState,\n            positionX = _ref.positionX,\n            positionY = _ref.positionY,\n            scale = _ref.scale,\n            previousScale = _ref.previousScale,\n            _ref$options = _ref.options,\n            limitToBounds = _ref$options.limitToBounds,\n            transformEnabled = _ref$options.transformEnabled,\n            disabled = _ref$options.disabled,\n            rest = _objectWithoutProperties(_ref, [\"zoomIn\", \"zoomOut\", \"resetTransform\", \"setDefaultState\", \"positionX\", \"positionY\", \"scale\", \"previousScale\", \"options\"]);\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, _this2.updateZoomValue(scale), React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(TransformComponent, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: imageSrc,\n          alt: \"viewer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \"x : \", positionX, \"px\"), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"y : \", positionY, \"px\"), React.createElement(\"span\", {\n          className: \"badge badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Scale : \", scale * 100, \"%\")));\n      }), React.createElement(Slider, {\n        sliderValue: sliderValue.bind(this),\n        newValue: this.state.zoomPct,\n        sync: this.state.slider.sync,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Viewer;\n}(Component);\n\nexport default Viewer;","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/viewer/index.js"],"names":["React","Component","TransformWrapper","TransformComponent","Slider","Viewer","props","state","zpp","type","limitToBounds","panningEnabled","transformEnabled","pinchEnabled","limitToWrapper","disabled","dbClickEnabled","lockAxisX","lockAxisY","velocityEqualToMove","enableWheel","enableTouchPadPinch","enableVelocity","limitsOnWheel","minScale","maxScale","step","updated","slider","sync","zoomPct","prevPct","sliderValue","bind","updateZoomValue","value","isUpdated","isSynced","setState","imageSrc","velocity","wheelEnabled","touchPadEnabled","zoomIn","zoomOut","resetTransform","setDefaultState","positionX","positionY","scale","previousScale","options","rest"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport Slider from \"../utils/index.js\"\n\n\nclass Viewer extends Component {\n\n  constructor (props) {\n    super(props);\n    this.sliderValue.bind(this);\n    this.updateZoomValue.bind(this);\n  }\n\n  state = {\n    zpp: {\n      type: true,\n      limitToBounds: true,\n      panningEnabled: true,\n      transformEnabled: true,\n      pinchEnabled: false,\n      limitToWrapper: false,\n      disabled: false,\n      dbClickEnabled: true,\n      lockAxisX: false,\n      lockAxisY: false,\n      velocityEqualToMove: true,\n      enableWheel: true,\n      enableTouchPadPinch: false,\n      enableVelocity: true,\n      limitsOnWheel: false,\n      minScale: 0.5,\n      maxScale: 8,\n      step: 10,\n      updated: false\n    },\n    slider: {\n      sync: false,\n      updated: false\n    },\n    zoomPct: 1,\n    prevPct: 0\n  };\n\n  sliderValue(value, isUpdated, isSynced) {\n    this.setState({zoomPct: value/100});\n    this.setState({slider: {updated: isUpdated}});\n    this.setState({slider: {sync: isSynced}});\n  }\n\n  updateZoomValue(value) {\n    this.state.zoomPct = value;\n\n    if (this.state.zoomPct !== this.state.prevPct) {\n      this.state.prevPct = this.state.zoomPct;\n      this.state.zoomPct = value/100;\n    }\n  }\n\n\n  render() {\n\n    const {\n      limitToBounds,\n      panningEnabled,\n      transformEnabled,\n      pinchEnabled,\n      limitToWrapper,\n      disabled,\n      dbClickEnabled,\n      lockAxisX,\n      lockAxisY,\n      velocityEqualToMove,\n      enableWheel,\n      enableTouchPadPinch,\n      enableVelocity,\n      limitsOnWheel,\n      minScale,\n      maxScale,\n      step\n    } = this.state.zpp;\n\n    const { imageSrc }  = this.props;\n    var sliderValue = this.sliderValue;\n\n    return (\n      <div>\n        <TransformWrapper\n          defaultScale={1}\n          defaultPositionX={0}\n          defaultPositionY={0}\n          scale={this.state.zoomPct}\n\n          options={{\n            limitToBounds,\n            transformEnabled,\n            disabled,\n            limitToWrapper,\n            minScale,\n            maxScale\n          }}\n\n          pan={{\n            disabled: !panningEnabled,\n            lockAxisX,\n            lockAxisY,\n            velocityEqualToMove,\n            velocity: enableVelocity,\n          }}\n\n          pinch={{ disabled: !pinchEnabled }}\n          doubleClick={{ disabled: !dbClickEnabled }}\n\n          wheel={{\n            wheelEnabled: enableWheel,\n            touchPadEnabled: enableTouchPadPinch,\n            limitsOnWheel,\n            step: step\n          }}>\n\n        {({\n          zoomIn,\n          zoomOut,\n          resetTransform,\n          setDefaultState,\n          positionX,\n          positionY,\n          scale,\n          previousScale,\n          options: { limitToBounds, transformEnabled, disabled },\n          ...rest\n        }) => (\n\n        <div>\n          {this.updateZoomValue(scale)}\n          <React.Fragment>\n\n            <TransformComponent>\n              <img src={imageSrc} alt=\"viewer\"/>\n            </TransformComponent>\n\n            <span className=\"badge badge-primary\">\n              x : {positionX}px\n            </span>\n\n            <span className=\"badge badge-primary\">\n              y : {positionY}px\n            </span>\n\n            <span className=\"badge badge-primary\">\n              Scale : {scale*100}%\n            </span>\n\n          </React.Fragment>\n          </div>\n\n          )\n        }\n\n\n        </TransformWrapper>\n        <Slider sliderValue={sliderValue.bind(this)} newValue={this.state.zoomPct} sync={this.state.slider.sync} />\n      </div>\n    );\n  }\n}\n\nexport default Viewer;"]},"metadata":{},"sourceType":"module"}