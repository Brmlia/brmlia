{"ast":null,"code":"var _jsxFileName = \"/Users/ramiroochoa/Desktop/brmlia/src/imagecanvas/custom/TestImageWrapper.js\";\nimport React, { useState } from \"react\";\nimport Image from \"./TestImage.js\";\nimport { Canvas } from 'react-three-fiber'; // wraps the image into a Canvas\n\nexport function TestImageWrapper() {\n  // function component\n  var Box = function Box() {\n    return React.createElement(\"mesh\", {\n      onPointerOver: function onPointerOver() {\n        return setHovered(true);\n      },\n      onPointerOut: function onPointerOut() {\n        return setHovered(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Image, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: [1, 1, 1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: hovered ? \"hotpink\" : \"gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Canvas, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"const  [hovered, setHovered] = useState(false);\", React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\nexport default TestImageWrapper;","map":{"version":3,"sources":["/Users/ramiroochoa/Desktop/brmlia/src/imagecanvas/custom/TestImageWrapper.js"],"names":["React","useState","Image","Canvas","TestImageWrapper","Box","setHovered","hovered"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAO,SAASC,gBAAT,GAA4B;AAEnC;AAGC,MAAMC,GAAG,GAAG,SAANA,GAAM;AAAA,WAGX;AACA,MAAA,aAAa,EAAE;AAAA,eAAMC,UAAU,CAAC,IAAD,CAAhB;AAAA,OADf;AAEA,MAAA,YAAY,EAAE;AAAA,eAAMA,UAAU,CAAC,KAAD,CAAhB;AAAA,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANL,EAOK;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPL,EAQK;AAAmB,MAAA,MAAM,EAAC,UAA1B;AAAqC,MAAA,KAAK,EAAEC,OAAO,GAAG,SAAH,GAAe,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARL,CAHW;AAAA,GAAZ;;AAgBC,SAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAGC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CAFF;AASD;AACD,eAAeH,gBAAf","sourcesContent":["import React, {useState} from \"react\";\nimport Image from \"./TestImage.js\";\nimport { Canvas } from 'react-three-fiber'\n// wraps the image into a Canvas\nexport function TestImageWrapper() {\n\n// function component\n\n\t\n\tconst Box = () => (\n\n\t\t\n\t\t<mesh \n\t\tonPointerOver={() => setHovered(true)}\n\t\tonPointerOut={() => setHovered(false)}\n\n\t\t>\n\t    \n\t      <Image/>\n\t      <boxBufferGeometry attach=\"geometry\" args={[1,1,1]} />\n\t      <meshBasicMaterial attach=\"material\" color={hovered ? \"hotpink\" : \"gray\"} />\n\n\t    </mesh>\n\t\t)\n\n  return (\n\n    <Canvas >\n    const  [hovered, setHovered] = useState(false);\n\n    \t<Box />\n\n    </Canvas>\n  )\n}\nexport default TestImageWrapper;\n"]},"metadata":{},"sourceType":"module"}