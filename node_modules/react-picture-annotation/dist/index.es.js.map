{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/Shape.ts","../src/Transformer.ts","../src/utils/randomId.ts","../src/annotation/CreatingAnnotationState.ts","../src/annotation/DraggingAnnotationState.ts","../src/annotation/TransfromationState.ts","../src/annotation/DefaultAnnotationState.ts","../src/DeleteButton.tsx","../src/DefaultInputSection.tsx","../src/ReactPictureAnnotation.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IAnnotation } from \"./Annotation\";\n\nexport const shapeStyle = {\n  padding: 5,\n  margin: 10,\n  fontSize: 12,\n  fontColor: \"#212529\",\n  fontBackground: \"#f8f9fa\",\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n  shapeBackground: \"hsla(210, 16%, 93%, 0.2)\",\n  shapeStrokeStyle: \"#f8f9fa\",\n  shapeShadowStyle: \"hsla(210, 9%, 31%, 0.35)\"\n};\n\nexport interface IShapeBase {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface IShapeAdjustBase {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface IShapeData extends IShapeBase {\n  type: string;\n}\n\nexport interface IRectShapeData extends IShapeData {\n  type: \"RECT\";\n}\n\nexport interface IShape {\n  onDragStart: (positionX: number, positionY: number) => void;\n  onDrag: (positionX: number, positionY: number) => void;\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => IShapeBase;\n  getAnnotationData: () => IAnnotation;\n  adjustMark: (adjustBase: IShapeAdjustBase) => void;\n  setComment: (comment: string) => void;\n  equal: (data: IAnnotation) => boolean;\n}\n\nexport class RectShape implements IShape {\n  private annotationData: IAnnotation<IShapeData>;\n\n  private onChangeCallBack: () => void;\n\n  private dragStartOffset: { offsetX: number; offsetY: number };\n\n  constructor(data: IAnnotation<IShapeData>, onChange: () => void) {\n    this.annotationData = data;\n    this.onChangeCallBack = onChange;\n  }\n\n  public onDragStart = (positionX: number, positionY: number) => {\n    const { x, y } = this.annotationData.mark;\n    this.dragStartOffset = {\n      offsetX: positionX - x,\n      offsetY: positionY - y\n    };\n  };\n\n  public onDrag = (positionX: number, positionY: number) => {\n    this.annotationData.mark.x = positionX - this.dragStartOffset.offsetX;\n    this.annotationData.mark.y = positionY - this.dragStartOffset.offsetY;\n    this.onChangeCallBack();\n  };\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const {\n      mark: { x, y, width, height }\n    } = this.annotationData;\n\n    if (\n      ((positionX > x && positionX < x + width) ||\n        (positionX < x && positionX > x + width)) &&\n      ((positionY > y && positionY < y + height) ||\n        (positionY < y && positionY > y + height))\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => {\n    const { x, y, width, height } = calculateTruePosition(\n      this.annotationData.mark\n    );\n    canvas2D.save();\n\n    canvas2D.shadowBlur = 10;\n    canvas2D.shadowColor = shapeStyle.shapeShadowStyle;\n    canvas2D.strokeStyle = shapeStyle.shapeStrokeStyle;\n    canvas2D.lineWidth = 2;\n    canvas2D.strokeRect(x, y, width, height);\n    canvas2D.restore();\n    if (selected) {\n      canvas2D.fillStyle = shapeStyle.shapeBackground;\n      canvas2D.fillRect(x, y, width, height);\n    } else {\n      const { comment } = this.annotationData;\n      if (comment) {\n        canvas2D.font = `${shapeStyle.fontSize}px ${shapeStyle.fontFamily}`;\n        const metrics = canvas2D.measureText(comment);\n        canvas2D.save();\n        canvas2D.fillStyle = shapeStyle.fontBackground;\n        canvas2D.fillRect(\n          x,\n          y,\n          metrics.width + shapeStyle.padding * 2,\n          shapeStyle.fontSize + shapeStyle.padding * 2\n        );\n        canvas2D.textBaseline = \"top\";\n        canvas2D.fillStyle = shapeStyle.fontColor;\n        canvas2D.fillText(\n          comment,\n          x + shapeStyle.padding,\n          y + shapeStyle.padding\n        );\n      }\n    }\n    canvas2D.restore();\n\n    return { x, y, width, height };\n  };\n\n  public adjustMark = ({\n    x = this.annotationData.mark.x,\n    y = this.annotationData.mark.y,\n    width = this.annotationData.mark.width,\n    height = this.annotationData.mark.height\n  }: {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n  }) => {\n    this.annotationData.mark.x = x;\n    this.annotationData.mark.y = y;\n    this.annotationData.mark.width = width;\n    this.annotationData.mark.height = height;\n    this.onChangeCallBack();\n  };\n\n  public getAnnotationData = () => {\n    return this.annotationData;\n  };\n\n  public setComment = (comment: string) => {\n    this.annotationData.comment = comment;\n  };\n\n  public equal = (data: IAnnotation) => {\n    return (\n      data.id === this.annotationData.id &&\n      data.comment === this.annotationData.comment &&\n      data.mark.x === this.annotationData.mark.x &&\n      data.mark.y === this.annotationData.mark.y &&\n      data.mark.width === this.annotationData.mark.width &&\n      data.mark.height === this.annotationData.mark.height\n    );\n  };\n}\n","import { IShape, IShapeBase } from \"Shape\";\n\nconst NODE_WIDTH = 10;\n\nexport interface ITransformer {\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  startTransformation: (positionX: number, positionY: number) => void;\n  onTransformation: (positionX: number, positionY: number) => void;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase\n  ) => void;\n}\n\nexport default class Transformer implements ITransformer {\n  private shape: IShape;\n  private currentNodeCenterIndex: number;\n\n  constructor(shape: IShape) {\n    this.shape = shape;\n  }\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    return currentCenterIndex >= 0;\n  };\n\n  public startTransformation = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    this.currentNodeCenterIndex = currentCenterIndex;\n  };\n\n  public onTransformation = (positionX: number, positionY: number) => {\n    const currentCentersTable = this.getAllCentersTable();\n    currentCentersTable[this.currentNodeCenterIndex].adjust(\n      positionX,\n      positionY\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase\n  ) => {\n    const allCentersTable = this.getAllCentersTable();\n    canvas2D.save();\n    canvas2D.fillStyle = \"#5c7cfa\";\n\n    for (const item of allCentersTable) {\n      const { x, y, width, height } = calculateTruePosition({\n        x: item.x - NODE_WIDTH / 2,\n        y: item.y - NODE_WIDTH / 2,\n        width: NODE_WIDTH,\n        height: NODE_WIDTH\n      });\n      canvas2D.fillRect(x, y, width, height);\n    }\n\n    canvas2D.restore();\n  };\n\n  private getCenterIndexByCursor = (positionX: number, positionY: number) => {\n    const allCentersTable = this.getAllCentersTable();\n    return allCentersTable.findIndex(item =>\n      this.checkEachRectBoundary(item.x, item.y, positionX, positionY)\n    );\n  };\n\n  private checkEachRectBoundary = (\n    rectCenterX: number,\n    rectCenterY: number,\n    positionX: number,\n    positionY: number\n  ) => {\n    if (\n      Math.abs(positionX - rectCenterX) <= NODE_WIDTH / 2 &&\n      Math.abs(positionY - rectCenterY) <= NODE_WIDTH / 2\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  private getAllCentersTable = () => {\n    const { shape } = this;\n    const { x, y, width, height } = shape.getAnnotationData().mark;\n    return [\n      {\n        x,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            y: positionY,\n            width: width + x - positionX,\n            height: height + y - positionY\n          });\n        }\n      },\n      {\n        x: x + width / 2,\n        y,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            y: positionY,\n            height: height + y - positionY\n          });\n        }\n      },\n      {\n        x: x + width,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x,\n            y: positionY,\n            width: positionX - x,\n            height: y + height - positionY\n          });\n        }\n      },\n      {\n        x,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX\n          });\n        }\n      },\n      {\n        x: x + width,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({ width: positionX - x });\n        }\n      },\n      {\n        x,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n            height: positionY - y\n          });\n        }\n      },\n      {\n        x: x + width / 2,\n        y: y + height,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            height: positionY - y\n          });\n        }\n      },\n      {\n        x: x + width,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            width: positionX - x,\n            height: positionY - y\n          });\n        }\n      }\n    ];\n  };\n}\n","export default (len = 6) => {\n  const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  const maxPos = chars.length;\n  let id = \"\";\n  for (let i = 0; i < len; i++) {\n    id += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return id;\n};\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class CreatingAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    if (shapes.length > 0) {\n      const currentShape = shapes[shapes.length - 1];\n      const {\n        mark: { x, y }\n      } = currentShape.getAnnotationData();\n      currentShape.adjustMark({\n        width: positionX - x,\n        height: positionY - y\n      });\n    }\n  };\n\n  public onMouseUp = () => {\n    const { shapes, onShapeChange, setAnnotationState } = this.context;\n    const data = shapes.pop();\n    if (\n      data &&\n      data.getAnnotationData().mark.width !== 0 &&\n      data.getAnnotationData().mark.height !== 0\n    ) {\n      shapes.push(data);\n    } else {\n      this.context.selectedId = null;\n      onShapeChange();\n    }\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class DraggingAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    const currentShape = shapes[shapes.length - 1];\n    currentShape.onDrag(positionX, positionY);\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class TransformationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { currentTransformer } = this.context;\n    if (currentTransformer) {\n      currentTransformer.onTransformation(positionX, positionY);\n    }\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import ReactPictureAnnotation from \"../ReactPictureAnnotation\";\nimport { RectShape } from \"../Shape\";\nimport Transformer from \"../Transformer\";\nimport randomId from \"../utils/randomId\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport CreatingAnnotationState from \"./CreatingAnnotationState\";\nimport DraggingAnnotationState from \"./DraggingAnnotationState\";\nimport TransformationState from \"./TransfromationState\";\n\nexport class DefaultAnnotationState implements IAnnotationState {\n  private context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseMove = () => undefined;\n  public onMouseUp = () => undefined;\n\n  public onMouseLeave = () => undefined;\n\n  public onMouseDown = (positionX: number, positionY: number) => {\n    const {\n      shapes,\n      currentTransformer,\n      onShapeChange,\n      setAnnotationState: setState\n    } = this.context;\n\n    if (\n      currentTransformer &&\n      currentTransformer.checkBoundary(positionX, positionY)\n    ) {\n      currentTransformer.startTransformation(positionX, positionY);\n      setState(new TransformationState(this.context));\n      return;\n    }\n\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      if (shapes[i].checkBoundary(positionX, positionY)) {\n        this.context.selectedId = shapes[i].getAnnotationData().id;\n        this.context.currentTransformer = new Transformer(shapes[i]);\n        const [selectedShape] = shapes.splice(i, 1);\n        shapes.push(selectedShape);\n        selectedShape.onDragStart(positionX, positionY);\n        onShapeChange();\n        setState(new DraggingAnnotationState(this.context));\n        return;\n      }\n    }\n    this.context.shapes.push(\n      new RectShape(\n        {\n          id: randomId(),\n          mark: {\n            x: positionX,\n            y: positionY,\n            width: 0,\n            height: 0,\n            type: \"RECT\"\n          }\n        },\n        onShapeChange\n      )\n    );\n\n    setState(new CreatingAnnotationState(this.context));\n  };\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      className=\"rp-delete\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g data-name=\"Layer 2\">\n        <g data-name=\"trash-2\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nexport interface IDefaultInputSection {\n  value: string;\n  onChange: (value: string) => void;\n  onDelete: () => void;\n}\n\nexport default ({ value, onChange, onDelete }: IDefaultInputSection) => {\n  return (\n    <div className=\"rp-default-input-section\">\n      <input\n        className=\"rp-default-input-section_input\"\n        placeholder=\"INPUT TAG HERE\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n      <a className=\"rp-default-input-section_delete\" onClick={() => onDelete()}>\n        <DeleteButton />\n      </a>\n    </div>\n  );\n};\n","import React, { MouseEventHandler } from \"react\";\nimport { IAnnotation } from \"./Annotation\";\nimport { IAnnotationState } from \"./annotation/AnnotationState\";\nimport { DefaultAnnotationState } from \"./annotation/DefaultAnnotationState\";\nimport DefaultInputSection from \"./DefaultInputSection\";\n// import DeleteButton from \"./DeleteButton\";\nimport { IShape, IShapeBase, RectShape, shapeStyle } from \"./Shape\";\nimport Transformer, { ITransformer } from \"./Transformer\";\n\ninterface IReactPictureAnnotationProps {\n  annotationData?: IAnnotation[];\n  selectedId?: string | null;\n  onChange: (annotationData: IAnnotation[]) => void;\n  onSelect: (id: string | null) => void;\n  width: number;\n  height: number;\n  image: string;\n  inputElement: (\n    value: string,\n    onChange: (value: string) => void,\n    onDelete: () => void\n  ) => React.ReactElement;\n}\n\ninterface IStageState {\n  scale: number;\n  originX: number;\n  originY: number;\n}\n\nconst defaultState: IStageState = {\n  scale: 1,\n  originX: 0,\n  originY: 0\n};\n\nexport default class ReactPictureAnnotation extends React.Component<\n  IReactPictureAnnotationProps\n> {\n  set selectedId(value: string | null) {\n    const { onSelect } = this.props;\n    this.selectedIdTrueValue = value;\n    onSelect(value);\n  }\n\n  get selectedId() {\n    return this.selectedIdTrueValue;\n  }\n  public static defaultProps = {\n    inputElement: (\n      value: string,\n      onChange: (value: string) => void,\n      onDelete: () => void\n    ) => (\n      <DefaultInputSection\n        value={value}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n    )\n  };\n\n  public shapes: IShape[] = [];\n  public currentTransformer: ITransformer;\n\n  public state = {\n    inputPosition: {\n      left: 0,\n      top: 0\n    },\n    showInput: false,\n    inputComment: \"\"\n  };\n  private currentAnnotationData: IAnnotation[] = [];\n  private selectedIdTrueValue: string | null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  private canvas2D?: CanvasRenderingContext2D | null;\n  private imageCanvasRef = React.createRef<HTMLCanvasElement>();\n  private imageCanvas2D?: CanvasRenderingContext2D | null;\n  private currentImageElement?: HTMLImageElement;\n  private currentAnnotationState: IAnnotationState = new DefaultAnnotationState(\n    this\n  );\n  private scaleState = defaultState;\n\n  public componentDidMount = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      this.setCanvasDPI();\n\n      this.canvas2D = currentCanvas.getContext(\"2d\");\n      this.imageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      this.onImageChange();\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public componentDidUpdate = (preProps: IReactPictureAnnotationProps) => {\n    const { width, height, image } = this.props;\n    if (preProps.width !== width || preProps.height !== height) {\n      this.setCanvasDPI();\n      this.onShapeChange();\n      this.onImageChange();\n    }\n    if (preProps.image !== image) {\n      this.cleanImage();\n      if (this.currentImageElement) {\n        this.currentImageElement.src = image;\n      } else {\n        this.onImageChange();\n      }\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public calculateMousePosition = (positionX: number, positionY: number) => {\n    const { originX, originY, scale } = this.scaleState;\n    return {\n      positionX: (positionX - originX) / scale,\n      positionY: (positionY - originY) / scale\n    };\n  };\n\n  public calculateShapePosition = (shapeData: IShapeBase): IShapeBase => {\n    const { originX, originY, scale } = this.scaleState;\n    const { x, y, width, height } = shapeData;\n    return {\n      x: x * scale + originX,\n      y: y * scale + originY,\n      width: width * scale,\n      height: height * scale\n    };\n  };\n\n  public render() {\n    const { width, height, inputElement } = this.props;\n    const { showInput, inputPosition, inputComment } = this.state;\n    return (\n      <div className=\"rp-stage\">\n        <canvas\n          style={{ width, height }}\n          className=\"rp-image\"\n          ref={this.imageCanvasRef}\n          width={width * 2}\n          height={height * 2}\n        />\n        <canvas\n          className=\"rp-shapes\"\n          style={{ width, height }}\n          ref={this.canvasRef}\n          width={width * 2}\n          height={height * 2}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          onMouseUp={this.onMouseUp}\n          onMouseLeave={this.onMouseLeave}\n          onWheel={this.onWheel}\n        />\n        {showInput && (\n          <div className=\"rp-selected-input\" style={inputPosition}>\n            {inputElement(\n              inputComment,\n              this.onInputCommentChange,\n              this.onDelete\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  public setAnnotationState = (annotationState: IAnnotationState) => {\n    this.currentAnnotationState = annotationState;\n  };\n\n  public onShapeChange = () => {\n    if (this.canvas2D && this.canvasRef.current) {\n      this.canvas2D.clearRect(\n        0,\n        0,\n        this.canvasRef.current.width,\n        this.canvasRef.current.height\n      );\n\n      let hasSelectedItem = false;\n\n      for (const item of this.shapes) {\n        const isSelected = item.getAnnotationData().id === this.selectedId;\n        const { x, y, height } = item.paint(\n          this.canvas2D,\n          this.calculateShapePosition,\n          isSelected\n        );\n\n        if (isSelected) {\n          if (!this.currentTransformer) {\n            this.currentTransformer = new Transformer(item);\n          }\n\n          hasSelectedItem = true;\n\n          this.currentTransformer.paint(\n            this.canvas2D,\n            this.calculateShapePosition\n          );\n\n          this.setState({\n            showInput: true,\n            inputPosition: {\n              left: x,\n              top: y + height + shapeStyle.margin\n            },\n            inputComment: item.getAnnotationData().comment || \"\"\n          });\n        }\n      }\n\n      if (!hasSelectedItem) {\n        this.setState({\n          showInput: false,\n          inputComment: \"\"\n        });\n      }\n    }\n\n    this.currentAnnotationData = this.shapes.map(item =>\n      item.getAnnotationData()\n    );\n    const { onChange } = this.props;\n    onChange(this.currentAnnotationData);\n  };\n\n  private syncAnnotationData = () => {\n    const { annotationData } = this.props;\n    if (annotationData) {\n      const refreshShapesWithAnnotationData = () => {\n        this.selectedId = null;\n        const nextShapes = annotationData.map(\n          eachAnnotationData =>\n            new RectShape(eachAnnotationData, this.onShapeChange)\n        );\n        this.shapes = nextShapes;\n        this.onShapeChange();\n      };\n\n      if (annotationData.length !== this.shapes.length) {\n        refreshShapesWithAnnotationData();\n      } else {\n        for (const annotationDataItem of annotationData) {\n          const targetShape = this.shapes.find(\n            item => item.getAnnotationData().id === annotationDataItem.id\n          );\n          if (targetShape && targetShape.equal(annotationDataItem)) {\n            continue;\n          } else {\n            refreshShapesWithAnnotationData();\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  private syncSelectedId = () => {\n    const { selectedId } = this.props;\n\n    if (selectedId && selectedId !== this.selectedId) {\n      this.selectedId = selectedId;\n      this.onShapeChange();\n    }\n  };\n\n  private onDelete = () => {\n    const deleteTarget = this.shapes.findIndex(\n      shape => shape.getAnnotationData().id === this.selectedId\n    );\n    if (deleteTarget >= 0) {\n      this.shapes.splice(deleteTarget, 1);\n      this.onShapeChange();\n    }\n  };\n\n  private setCanvasDPI = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      const currentCanvas2D = currentCanvas.getContext(\"2d\");\n      const currentImageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      if (currentCanvas2D && currentImageCanvas2D) {\n        currentCanvas2D.scale(2, 2);\n        currentImageCanvas2D.scale(2, 2);\n      }\n    }\n  };\n\n  private onInputCommentChange = (comment: string) => {\n    const selectedShapeIndex = this.shapes.findIndex(\n      item => item.getAnnotationData().id === this.selectedId\n    );\n    this.shapes[selectedShapeIndex].setComment(comment);\n    this.setState({ inputComment: comment });\n  };\n\n  private cleanImage = () => {\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      this.imageCanvas2D.clearRect(\n        0,\n        0,\n        this.imageCanvasRef.current.width,\n        this.imageCanvasRef.current.height\n      );\n    }\n  };\n\n  private onImageChange = () => {\n    this.cleanImage();\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      if (this.currentImageElement) {\n        const { originX, originY, scale } = this.scaleState;\n        this.imageCanvas2D.drawImage(\n          this.currentImageElement,\n          originX,\n          originY,\n          this.currentImageElement.width * scale,\n          this.currentImageElement.height * scale\n        );\n      } else {\n        const nextImageNode = document.createElement(\"img\");\n        nextImageNode.addEventListener(\"load\", () => {\n          this.currentImageElement = nextImageNode;\n          const { width, height } = nextImageNode;\n          const imageNodeRatio = height / width;\n          const { width: canvasWidth, height: canvasHeight } = this.props;\n          const canvasNodeRatio = canvasHeight / canvasWidth;\n          if (!isNaN(imageNodeRatio) && !isNaN(canvasNodeRatio)) {\n            if (imageNodeRatio < canvasNodeRatio) {\n              const scale = canvasWidth / width;\n              this.scaleState = {\n                originX: 0,\n                originY: (canvasHeight - scale * height) / 2,\n                scale\n              };\n            } else {\n              const scale = canvasHeight / height;\n              this.scaleState = {\n                originX: (canvasWidth - scale * width) / 2,\n                originY: 0,\n                scale\n              };\n            }\n          }\n          this.onImageChange();\n          this.onShapeChange();\n        });\n        nextImageNode.alt = \"\";\n        nextImageNode.src = this.props.image;\n      }\n    }\n  };\n\n  private onMouseDown: MouseEventHandler<HTMLCanvasElement> = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseDown(positionX, positionY);\n  };\n\n  private onMouseMove: MouseEventHandler<HTMLCanvasElement> = event => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseMove(positionX, positionY);\n  };\n\n  private onMouseUp: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseUp();\n  };\n\n  private onMouseLeave: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseLeave();\n  };\n\n  private onWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\n    // https://stackoverflow.com/a/31133823/9071503\n    const { clientHeight, scrollTop, scrollHeight } = event.currentTarget;\n    if (clientHeight + scrollTop + event.deltaY > scrollHeight) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = scrollHeight;\n    } else if (scrollTop + event.deltaY < 0) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = 0;\n    }\n\n    const { scale: preScale } = this.scaleState;\n    this.scaleState.scale += event.deltaY * 0.005;\n    if (this.scaleState.scale > 10) {\n      this.scaleState.scale = 10;\n    }\n    if (this.scaleState.scale < 0.1) {\n      this.scaleState.scale = 0.1;\n    }\n\n    const { originX, originY, scale } = this.scaleState;\n    const { offsetX, offsetY } = event.nativeEvent;\n    this.scaleState.originX =\n      offsetX - ((offsetX - originX) / preScale) * scale;\n    this.scaleState.originY =\n      offsetY - ((offsetY - originY) / preScale) * scale;\n\n    this.setState({ imageScale: this.scaleState });\n\n    requestAnimationFrame(() => {\n      this.onShapeChange();\n      this.onImageChange();\n    });\n  };\n}\n"],"names":["shapeStyle","padding","margin","fontSize","fontColor","fontBackground","fontFamily","shapeBackground","shapeStrokeStyle","shapeShadowStyle","RectShape","data","onChange","positionX","positionY","annotationData","mark","x","y","dragStartOffset","offsetX","offsetY","onChangeCallBack","width","height","canvas2D","calculateTruePosition","selected","save","shadowBlur","shadowColor","strokeStyle","lineWidth","strokeRect","restore","fillStyle","fillRect","comment","font","metrics","measureText","textBaseline","fillText","id","NODE_WIDTH","Transformer","shape","currentCenterIndex","getCenterIndexByCursor","currentNodeCenterIndex","currentCentersTable","getAllCentersTable","adjust","allCentersTable","item","findIndex","checkEachRectBoundary","rectCenterX","rectCenterY","Math","abs","getAnnotationData","adjustMark","_","len","chars","maxPos","length","i","charAt","floor","random","CreatingAnnotationState","context","undefined","shapes","currentShape","onShapeChange","setAnnotationState","pop","push","selectedId","DefaultAnnotationState","onMouseUp","DraggingAnnotationState","onDrag","TransformationState","currentTransformer","onTransformation","setState","checkBoundary","startTransformation","splice","selectedShape","onDragStart","randomId","type","value","onDelete","e","target","defaultState","scale","originX","originY","ReactPictureAnnotation","inputPosition","left","top","showInput","inputComment","React","createRef","currentCanvas","canvasRef","current","currentImageCanvas","imageCanvasRef","setCanvasDPI","getContext","imageCanvas2D","onImageChange","syncAnnotationData","syncSelectedId","preProps","props","image","cleanImage","currentImageElement","src","scaleState","shapeData","annotationState","currentAnnotationState","clearRect","hasSelectedItem","isSelected","paint","calculateShapePosition","currentAnnotationData","map","refreshShapesWithAnnotationData","nextShapes","eachAnnotationData","annotationDataItem","targetShape","find","equal","deleteTarget","currentCanvas2D","currentImageCanvas2D","selectedShapeIndex","setComment","drawImage","nextImageNode","document","createElement","addEventListener","imageNodeRatio","canvasWidth","canvasHeight","canvasNodeRatio","isNaN","alt","event","nativeEvent","calculateMousePosition","onMouseDown","onMouseMove","onMouseLeave","currentTarget","clientHeight","scrollTop","scrollHeight","deltaY","preScale","imageScale","requestAnimationFrame","inputElement","state","onWheel","onInputCommentChange","onSelect","selectedIdTrueValue","Component"],"mappings":"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"}